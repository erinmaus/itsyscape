--------------------------------------------------------------------------------
-- ItsyScape/Game/Model/Prop.lua
--
-- This file is a part of ItsyScape.
--
-- This Source Code Form is subject to the terms of the Mozilla Public
-- License, v. 2.0. If a copy of the MPL was not distributed with this
-- file, You can obtain one at http://mozilla.org/MPL/2.0/.
--------------------------------------------------------------------------------
local Class = require "ItsyScape.Common.Class"

-- Prop, representing any interactive object.
local Prop = Class()

-- Represents an invalid ID.
Prop.NIL_ID = 0

function Prop:new()
	-- Nothing.
end

-- Places the Prop, assigning it the given unique ID.
function Prop:place(id)
	Class.ABSTRACT()
end

-- Called when the Prop is removed from the Stage.
--
-- Should set ID to Prop.NIL_ID.
function Prop:remove()
	Class.ABSTRACT()
end

-- Gets the Prop's unique ID, or Prop.NIL_ID if the actor is not spawned.
function Prop:getID()
	return Class.ABSTRACT()
end

-- Gets the name of the Prop.
function Prop:getName()
	return Class.ABSTRACT()
end

-- Gets the resource type of the Prop.
function Prop:getResourceType()
	return Class.ABSTRACT()
end

-- Gets the resource name of the Prop.
function Prop:getResourceName()
	return Class.ABSTRACT()
end

-- Sets the name of the Prop.
function Prop:setName(value)
	Class.ABSTRACT()
end

-- Sets the direction of the Prop.
--
-- See Prop.getDirection
function Prop:setDirection(direction)
	Class.ABSTRACT()
end

-- Gets the position of the Prop, as a Vector.
function Prop:getPosition()
	return Class.ABSTRACT()
end

-- Gets the rotation of the Prop, as a Quaternion.
function Prop:getRotation()
	return Class.ABSTRACT()
end

-- Gets the scale of the Prop, as a Vector.
function Prop:getScale()
	return Class.ABSTRACT()
end

-- Returns the bounds, as (min, max).
function Prop:getBounds()
	return Class.ABSTRACT()
end

-- Returns a list of actions.
--
-- Scope is an action scope; defaults to 'world'.
--
-- This list is generated by Utility.getActions on the underlying resource.
function Prop:getActions(scope)
	return Class.ABSTRACT()
end

-- Pokes 'action' with the specified ID.
--
-- Scope is an action scope; defaults to 'world'.
--
-- Actions are stored in the GameDB.
function Prop:poke(action, scope)
	Class.ABSTRACT()
end

return Prop
